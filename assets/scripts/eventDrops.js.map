{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///eventDrops.js","webpack:///webpack/bootstrap e85e96623f04e512c8d8","webpack:///./~/d3/build/d3.js","webpack:///./lib/drawer/labels.js","webpack:///./lib/drawer/xAxis.js","webpack:///./lib/xAxis.js","webpack:///./lib/config.js","webpack:///./lib/drawer/delimiters.js","webpack:///./lib/drawer/drops.js","webpack:///./lib/drawer/index.js","webpack:///./lib/drawer/lineSeparator.js","webpack:///./lib/eventDrops.js","webpack:///./lib/filterData.js","webpack:///./lib/metaballs.js","webpack:///./lib/zoom.js","webpack:///./~/configurable.js/configurable.js","webpack:///./~/debounce/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","global","ascendingComparator","f","d","x","ascending","pair","a","b","tickIncrement","start","stop","count","step","Math","max","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","length","translateX","translateY","y","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","ticks","apply","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","position","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","k","top","bottom","transition","epsilon","isFinite","transform","getAttribute","parentNode","remove","left","right","tickSizeOuter","filter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","i","n","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","name","indexOf","hasOwnProperty","type","get","value","set","callback","noop","concat","push","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","o","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","prototype","Object","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","z","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","ao","ob","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","version","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","buffer","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","valueOf","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","skj0","skj1","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","defineProperty","_interopRequireDefault","obj","__esModule","default","_filterData","_filterData2","scales","config","labels","labelsWidth","idx","boolOrReturnValue","drawBottomAxis","drawTopAxis","_xAxis","_xAxis2","drawAxis","xScale","configuration","orientation","dimensions","_interopRequireWildcard","newObj","where","axisFormat","_d","lineHeight","minScale","maxScale","margin","labelsRightMargin","mouseout","mouseover","zoomend","click","hasDelimiter","hasTopAxis","hasBottomAxis","eventLineColor","eventColor","metaballs","zoomable","dateFormat","delimiters","extremum","dropLines","drops","_metaballs","_delimiters","_drops","_drops2","_labels","_labels2","_lineSeparator","_lineSeparator2","defs","labelsContainer","chartContainer","dropsContainer","axesContainer","lineSeparator","separators","eventDrops","eventDropGraph","finalConfiguration","getScales","_drawer2","_zoom2","yScale","timeBounds","_configurable2","_extends","assign","_configurable","_config","_config2","_drawer","_zoom","chart","filterData","_scale$domain","_scale$domain2","_slicedToArray","sliceIterator","arr","_arr","_n","_e","_s","_i","Symbol","iterator","done","err","filters","_xAxis3","_debounce","_debounce2","onZoom","scalingFunction","sumDataCount","configurable","targetFunction","configure","item","func","wait","immediate","later","last","timestamp","debounced","callNow"],"mappings":"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","file":"eventDrops.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"eventDrops\"] = factory();\n\telse\n\t\troot[\"eventDrops\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"eventDrops\"] = factory();\n\telse\n\t\troot[\"eventDrops\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(16);\n\tmodule.exports = __webpack_require__(10);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.8.0. Copyright 2017 Mike Bostock.\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\t(factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.8.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar pairs = function(array, f) {\n\t  if (f == null) f = pair;\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = f(p, p = array[++i]);\n\t  return pairs;\n\t};\n\t\n\tfunction pair(a, b) {\n\t  return [a, b];\n\t}\n\t\n\tvar cross = function(values0, values1, reduce) {\n\t  var n0 = values0.length,\n\t      n1 = values1.length,\n\t      values = new Array(n0 * n1),\n\t      i0,\n\t      i1,\n\t      i,\n\t      value0;\n\t\n\t  if (reduce == null) reduce = pair;\n\t\n\t  for (i0 = i = 0; i0 < n0; ++i0) {\n\t    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n\t      values[i] = reduce(value0, values1[i1]);\n\t    }\n\t  }\n\t\n\t  return values;\n\t};\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(values, valueof) {\n\t  var n = values.length,\n\t      m = 0,\n\t      i = -1,\n\t      mean = 0,\n\t      value,\n\t      delta,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        delta = value - mean;\n\t        mean += delta / ++m;\n\t        sum += delta * (value - mean);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (m > 1) return sum / (m - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null) {\n\t            if (min > value) min = value;\n\t            if (max < value) max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return [min, max];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar sequence = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var reverse = stop < start,\n\t      i = -1,\n\t      n,\n\t      ticks,\n\t      step;\n\t\n\t  if (reverse) n = start, start = stop, stop = n;\n\t\n\t  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\t\n\t  if (step > 0) {\n\t    start = Math.ceil(start / step);\n\t    stop = Math.floor(stop / step);\n\t    ticks = new Array(n = Math.ceil(stop - start + 1));\n\t    while (++i < n) ticks[i] = (start + i) * step;\n\t  } else {\n\t    start = Math.floor(start * step);\n\t    stop = Math.ceil(stop * step);\n\t    ticks = new Array(n = Math.ceil(start - stop + 1));\n\t    while (++i < n) ticks[i] = (start - i) / step;\n\t  }\n\t\n\t  if (reverse) ticks.reverse();\n\t\n\t  return ticks;\n\t};\n\t\n\tfunction tickIncrement(start, stop, count) {\n\t  var step = (stop - start) / Math.max(0, count),\n\t      power = Math.floor(Math.log(step) / Math.LN10),\n\t      error = step / Math.pow(10, power);\n\t  return power >= 0\n\t      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n\t      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n\t}\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) {\n\t      tz = tickStep(x0, x1, tz);\n\t      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n\t    }\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] > x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(values, p, valueof) {\n\t  if (valueof == null) valueof = number;\n\t  if (!(n = values.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n\t  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n\t  var n,\n\t      i = (n - 1) * p,\n\t      i0 = Math.floor(i),\n\t      value0 = +valueof(values[i0], i0, values),\n\t      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n\t  return value0 + (value1 - value0) * (i - i0);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      max;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        max = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && value > max) {\n\t            max = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return max;\n\t};\n\t\n\tvar mean = function(values, valueof) {\n\t  var n = values.length,\n\t      m = n,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n\t      else --m;\n\t    }\n\t  }\n\t\n\t  if (m) return sum / m;\n\t};\n\t\n\tvar median = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      numbers = [];\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(values[i]))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n\t        numbers.push(value);\n\t      }\n\t    }\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      min;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = values[i]) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = values[i]) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) { // Find the first comparable value.\n\t      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n\t        min = value;\n\t        while (++i < n) { // Compare the remaining values.\n\t          if ((value = valueof(values[i], i, values)) != null && min > value) {\n\t            min = value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return min;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(values, compare) {\n\t  if (!(n = values.length)) return;\n\t  var n,\n\t      i = 0,\n\t      j = 0,\n\t      xi,\n\t      xj = values[j];\n\t\n\t  if (compare == null) compare = ascending;\n\t\n\t  while (++i < n) {\n\t    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n\t      xj = xi, j = i;\n\t    }\n\t  }\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(values, valueof) {\n\t  var n = values.length,\n\t      i = -1,\n\t      value,\n\t      sum = 0;\n\t\n\t  if (valueof == null) {\n\t    while (++i < n) {\n\t      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (value = +valueof(values[i], i, values)) sum += value;\n\t    }\n\t  }\n\t\n\t  return sum;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar slice$1 = Array.prototype.slice;\n\t\n\tvar identity$1 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon = 1e-6;\n\t\n\tfunction translateX(x) {\n\t  return \"translate(\" + x + \",0)\";\n\t}\n\t\n\tfunction translateY(y) {\n\t  return \"translate(0,\" + y + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3,\n\t      k = orient === top || orient === left ? -1 : 1,\n\t      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n\t      transform = orient === top || orient === bottom ? translateX : translateY;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon)\n\t          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position(d)); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$1.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tvar noop = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local$1() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local$1.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point(node, event);\n\t};\n\t\n\tfunction none() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty$1() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty$1 : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$1(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$1;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$1(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter$1,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$1 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = ((function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t}))(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$1);\n\tvar rgbBasisClosed = rgbSpline(basisClosed);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar reinterpolate = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolateValue(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: reinterpolate(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolateValue = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? reinterpolate\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : reinterpolate)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$1(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$1(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? reinterpolate\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$1(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$1(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$1(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start(name) ? init : set$1;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$2) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$2, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$2, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value + \"\"), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tfunction linear$1(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent,\n\t      filter = defaultFilter,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolateValue(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$1();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$1();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$1();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$1();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$1 = Math.PI;\n\tvar halfPi$1 = pi$1 / 2;\n\tvar tau$1 = pi$1 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = sequence(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(sequence(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$1 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$1 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar pi$2 = Math.PI;\n\tvar tau$2 = 2 * pi$2;\n\tvar epsilon$1 = 1e-6;\n\tvar tauEpsilon = tau$2 - epsilon$1;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon$1)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon$1) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Does the angle go the wrong way? Flip the direction.\n\t    if (da < 0) da = da % tau$2 + tau$2;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Is this arc non-empty? Draw an arc!\n\t    else if (da > epsilon$1) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$2.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$1,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$1,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$1,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set$2.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set$2(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tfunction x(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$6(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$6(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$2 = function(x) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$2 = function(y) {\n\t  var strength = constant$6(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatNumerals = function(numerals) {\n\t  return function(value) {\n\t    return value.replace(/[0-9]/g, function(i) {\n\t      return numerals[+i];\n\t    });\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tfunction formatSpecifier(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t}\n\t\n\tformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar identity$3 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal,\n\t      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n\t      percent = locale.percent || \"%\";\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Perform the initial formatting.\n\t        var valueNegative = value < 0;\n\t        value = formatType(Math.abs(value), precision);\n\t\n\t        // If a negative value rounds to zero during formatting, treat as positive.\n\t        if (valueNegative && +value === 0) valueNegative = false;\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n\t        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n\t        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n\t        default: value = padding + valuePrefix + value + valueSuffix; break;\n\t      }\n\t\n\t      return numerals(value);\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$2 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar quarterPi = pi$3 / 4;\n\tvar tau$3 = pi$3 * 2;\n\t\n\tvar degrees$1 = 180 / pi$3;\n\tvar radians = pi$3 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log = Math.log;\n\tvar pow = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n\t}\n\t\n\tfunction asin(x) {\n\t  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(object, stream) {\n\t    streamGeometry(object.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$1;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$3);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$2) phi1 = 90;\n\t    else if (deltaSum < -epsilon$2) phi0 = -90;\n\t    range[0] = lambda0$1, range[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  }\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n\t  range[0] = lambda0$1, range[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$1,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt(cx * cx + cy * cy + cz * cz),\n\t      w = asin(m), // line weight = angle\n\t      v = m && -w / m; // area weight multiplier\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$1) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$1) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$3;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n\t}\n\t\n\tvar circle = function() {\n\t  var center = constant$7([0, 0]),\n\t      radius = constant$7(90),\n\t      precision = constant$7(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$1,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar sum$1 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$1.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$3,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$1,\n\t  point: noop$1,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$1;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$1 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$1(object$1);\n\t};\n\t\n\tvar containsObjectType = {\n\t  Feature: function(object, point) {\n\t    return containsGeometry(object.geometry, point);\n\t  },\n\t  FeatureCollection: function(object, point) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tvar containsGeometryType = {\n\t  Sphere: function() {\n\t    return true;\n\t  },\n\t  Point: function(object, point) {\n\t    return containsPoint(object.coordinates, point);\n\t  },\n\t  MultiPoint: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  LineString: function(object, point) {\n\t    return containsLine(object.coordinates, point);\n\t  },\n\t  MultiLineString: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  Polygon: function(object, point) {\n\t    return containsPolygon(object.coordinates, point);\n\t  },\n\t  MultiPolygon: function(object, point) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n\t    return false;\n\t  },\n\t  GeometryCollection: function(object, point) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction containsGeometry(geometry, point) {\n\t  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n\t      ? containsGeometryType[geometry.type](geometry, point)\n\t      : false;\n\t}\n\t\n\tfunction containsPoint(coordinates, point) {\n\t  return distance(coordinates, point) === 0;\n\t}\n\t\n\tfunction containsLine(coordinates, point) {\n\t  var ab = distance(coordinates[0], coordinates[1]),\n\t      ao = distance(coordinates[0], point),\n\t      ob = distance(point, coordinates[1]);\n\t  return ao + ob <= ab + epsilon$2;\n\t}\n\t\n\tfunction containsPolygon(coordinates, point) {\n\t  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n\t}\n\t\n\tfunction ringRadians(ring) {\n\t  return ring = ring.map(pointRadians), ring.pop(), ring;\n\t}\n\t\n\tfunction pointRadians(point) {\n\t  return [point[0] * radians, point[1] * radians];\n\t}\n\t\n\tvar contains = function(object, point) {\n\t  return (object && containsObjectType.hasOwnProperty(object.type)\n\t      ? containsObjectType[object.type]\n\t      : containsGeometry)(object, point);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n\t        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n\t      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$4 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$1,\n\t  lineEnd: noop$1,\n\t  polygonStart: noop$1,\n\t  polygonEnd: noop$1,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$3);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$1\n\t};\n\t\n\tvar lengthSum$1 = adder();\n\tvar lengthRing;\n\tvar x00$2;\n\tvar y00$2;\n\tvar x0$4;\n\tvar y0$4;\n\t\n\tvar lengthStream$1 = {\n\t  point: noop$1,\n\t  lineStart: function() {\n\t    lengthStream$1.point = lengthPointFirst$1;\n\t  },\n\t  lineEnd: function() {\n\t    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n\t    lengthStream$1.point = noop$1;\n\t  },\n\t  polygonStart: function() {\n\t    lengthRing = true;\n\t  },\n\t  polygonEnd: function() {\n\t    lengthRing = null;\n\t  },\n\t  result: function() {\n\t    var length = +lengthSum$1;\n\t    lengthSum$1.reset();\n\t    return length;\n\t  }\n\t};\n\t\n\tfunction lengthPointFirst$1(x, y) {\n\t  lengthStream$1.point = lengthPoint$1;\n\t  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n\t}\n\t\n\tfunction lengthPoint$1(x, y) {\n\t  x0$4 -= x, y0$4 -= y;\n\t  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n\t  x0$4 = x, y0$4 = y;\n\t}\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$1(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$1(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$1(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$1 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.measure = function(object) {\n\t    geoStream(object, projectionStream(lengthStream$1));\n\t    return lengthStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$3, -halfPi$2]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$2\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$2;\n\t    stream.point(-pi$3, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$3, phi);\n\t    stream.point(pi$3, 0);\n\t    stream.point(pi$3, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$3, -phi);\n\t    stream.point(-pi$3, 0);\n\t    stream.point(-pi$3, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$2) {\n\t    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$2;\n\t            point1[1] += epsilon$2;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$3) < epsilon$2,\n\t        meridian = polar || delta < epsilon$2;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$3 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n\t};\n\t\n\tvar transform = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt(a * a + b * b + c * c),\n\t          phi2 = asin(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$3 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$2];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$3);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      center = m.center,\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      x0 = null, y0, x1, y1; // clip extent\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), reclip()) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), reclip()) : translate();\n\t  };\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? (center(_), reclip()) : center();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  function reclip() {\n\t    var k = pi$3 * scale(),\n\t        t = m(rotation(m.rotate()).invert([0, 0]));\n\t    return clipExtent(x0 == null\n\t        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n\t        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n\t        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n\t  }\n\t\n\t  return reclip();\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$2 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n\t      f = cy0 * pow(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n\t    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n\t    var r = f / pow(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$2) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$5 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$2);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$2];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tfunction count(node) {\n\t  var sum = 0,\n\t      children = node.children,\n\t      i = children && children.length;\n\t  if (!i) sum = 1;\n\t  else while (--i >= 0) sum += children[i].value;\n\t  node.value = sum;\n\t}\n\t\n\tvar node_count = function() {\n\t  return this.eachAfter(count);\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  count: node_count,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr - 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(node, x, y) {\n\t  var a = node._,\n\t      b = node.next._,\n\t      ab = a.r + b.r,\n\t      dx = (a.x * b.r + b.x * a.r) / ab - x,\n\t      dy = (a.y * b.r + b.y * a.r) / ab - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    // “Closeness” is determined by linear distance along the front-chain.\n\t    // “Ahead” or “behind” is likewise determined by linear distance.\n\t    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n\t    do {\n\t      if (sj <= sk) {\n\t        if (intersects(j._, c._)) {\n\t          b = j, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sj += j._.r, j = j.next;\n\t      } else {\n\t        if (intersects(k._, c._)) {\n\t          a = k, a.next = b, b.previous = a, --i;\n\t          continue pack;\n\t        }\n\t        sk += k._.r, k = k.previous;\n\t      }\n\t    } while (j !== k.next);\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle pair to the centroid.\n\t    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius$1(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index$2 = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius$1))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = ((function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t}))(phi);\n\t\n\tvar index$3 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((x1 - x0) > (y1 - y0)) {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    } else {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = ((function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t}))(phi);\n\t\n\tvar area$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross$1 = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains$1 = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$2 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar slice$3 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$3.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke$1(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke$1(q) {\n\t  if (!q._start) {\n\t    try { start$1(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start$1(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke$1(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential$1 = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type$1 = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type$1(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type$1(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type$1(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type$1(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$4 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$4.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = sequence(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$1() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolateValue,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$6() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$6().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$9(b);\n\t}\n\t\n\tfunction reinterpolate$1(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log$1() {\n\t  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log$1().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise$1(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow$1() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n\t        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n\t        : constant$9(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n\t    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow$1().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt$1() {\n\t  return pow$1().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond$1 = 1e3;\n\tvar durationMinute$1 = 6e4;\n\tvar durationHour$1 = 36e5;\n\tvar durationDay$1 = 864e5;\n\tvar durationWeek$1 = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond$1;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n\t  if (offset < 0) offset += durationHour$1;\n\t  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute$1;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour$1);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour$1;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay$1;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek$1;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar durationSecond = 1000;\n\tvar durationMinute = durationSecond * 60;\n\tvar durationHour = durationMinute * 60;\n\tvar durationDay = durationHour * 24;\n\tvar durationWeek = durationDay * 7;\n\tvar durationMonth = durationDay * 30;\n\tvar durationYear = durationDay * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, reinterpolate),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond],\n\t    [second$$1,  5,  5 * durationSecond],\n\t    [second$$1, 15, 15 * durationSecond],\n\t    [second$$1, 30, 30 * durationSecond],\n\t    [minute$$1,  1,      durationMinute],\n\t    [minute$$1,  5,  5 * durationMinute],\n\t    [minute$$1, 15, 15 * durationMinute],\n\t    [minute$$1, 30, 30 * durationMinute],\n\t    [  hour$$1,  1,      durationHour  ],\n\t    [  hour$$1,  3,  3 * durationHour  ],\n\t    [  hour$$1,  6,  6 * durationHour  ],\n\t    [  hour$$1, 12, 12 * durationHour  ],\n\t    [   day$$1,  1,      durationDay   ],\n\t    [   day$$1,  2,  2 * durationDay   ],\n\t    [  week,  1,      durationWeek  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar constant$10 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar abs$1 = Math.abs;\n\tvar atan2$1 = Math.atan2;\n\tvar cos$2 = Math.cos;\n\tvar max$2 = Math.max;\n\tvar min$1 = Math.min;\n\tvar sin$2 = Math.sin;\n\tvar sqrt$2 = Math.sqrt;\n\t\n\tvar epsilon$3 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar tau$4 = 2 * pi$4;\n\t\n\tfunction acos$1(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$10(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$3,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$3,\n\t        da = abs$1(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$4 - epsilon$3) {\n\t      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$3) {\n\t        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n\t          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$3) {\n\t        var p0 = asin$1(rp / r0 * sin$2(ap)),\n\t            p1 = asin$1(rp / r1 * sin$2(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * cos$2(a01),\n\t          y01 = r1 * sin$2(a01),\n\t          x10 = r0 * cos$2(a10),\n\t          y10 = r0 * sin$2(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$3) {\n\t        var x11 = r1 * cos$2(a11),\n\t            y11 = r1 * sin$2(a11),\n\t            x00 = r0 * cos$2(a00),\n\t            y00 = r0 * sin$2(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$4) {\n\t          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n\t              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$3) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$3) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n\t    return [cos$2(a) * r, sin$2(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x$3(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y$3(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x$3,\n\t      y$$1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$2 = function() {\n\t  var x0 = x$3,\n\t      x1 = null,\n\t      y0 = constant$10(0),\n\t      y1 = y$3,\n\t      defined = constant$10(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$7 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$7,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$10(0),\n\t      endAngle = constant$10(tau$4),\n\t      padAngle = constant$10(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$2().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$4);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$4);\n\t  }\n\t};\n\t\n\tvar cross$2 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\n\tvar kx = Math.sin(tau$4 / 10) * kr;\n\tvar ky = -Math.cos(tau$4 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$4 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle$2,\n\t  cross$2,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$10(circle$2),\n\t      size = constant$10(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop$2 = function() {};\n\t\n\tfunction point$2(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point$2(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis$2 = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed$1 = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = ((function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t}))(0.85);\n\t\n\tfunction point$3(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$3(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$3(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = ((function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t}))(0);\n\t\n\tfunction point$4(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$3) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$3) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$4(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = ((function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t}))(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop$2,\n\t  areaEnd: noop$2,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign$1(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$5(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar none$1 = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$2 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$10([]),\n\t      order = none$2,\n\t      offset = none$1,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none$1(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none$1(series, order);\n\t};\n\t\n\tvar ascending$2 = function(series) {\n\t  var sums = series.map(sum$2);\n\t  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$2(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$2(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$2),\n\t      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$2(series).reverse();\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$2) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$4\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$4\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$4) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$4) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$4) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$4) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      if (!(m = (halfedges = cell.halfedges).length)) return;\n\t      var site = cell.site,\n\t          halfedges,\n\t          j = -1,\n\t          m,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\t\n\t    // Use the previously-found cell, or start with an arbitrary one.\n\t    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n\t    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\t\n\t    // Traverse the half-edges to find a closer cell, if any.\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$8 = new Transform(1, 0, 0);\n\t\n\ttransform$1.prototype = Transform.prototype;\n\t\n\tfunction transform$1(node) {\n\t  return node.__zoom || identity$8;\n\t}\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$8;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$2,\n\t      extent = defaultExtent$1,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$2();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$2();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$2();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$2();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$2();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        started,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$2();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p, started = true;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (started) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$2();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$2();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n\t    else g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.cross = cross;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = sequence;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickIncrement = tickIncrement;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.nest = nest;\n\texports.set = set$2;\n\texports.map = map$1;\n\texports.keys = keys;\n\texports.values = values;\n\texports.entries = entries;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.dispatch = dispatch;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.easeLinear = linear$1;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$2;\n\texports.forceY = y$2;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatLocale = formatLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.geoArea = area;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid;\n\texports.geoCircle = circle;\n\texports.geoClipExtent = extent$1;\n\texports.geoContains = contains;\n\texports.geoDistance = distance;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoInterpolate = interpolate$1;\n\texports.geoLength = length$1;\n\texports.geoPath = index$1;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoIdentity = identity$5;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\texports.geoRotation = rotation;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index$2;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$3;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.interpolate = interpolateValue;\n\texports.interpolateArray = array$1;\n\texports.interpolateBasis = basis$1;\n\texports.interpolateBasisClosed = basisClosed;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = reinterpolate;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.quantize = quantize;\n\texports.path = path;\n\texports.polygonArea = area$1;\n\texports.polygonCentroid = centroid$1;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains$1;\n\texports.polygonLength = length$2;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential$1;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$1;\n\texports.scaleIdentity = identity$6;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log$1;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow$1;\n\texports.scaleSqrt = sqrt$1;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.scaleSequential = sequential;\n\texports.creator = creator;\n\texports.local = local$1;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.customEvent = customEvent;\n\texports.arc = arc;\n\texports.area = area$2;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle$2;\n\texports.symbolCross = cross$2;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed$1;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis$2;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none$1;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$2;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$2;\n\texports.stackOrderReverse = reverse;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.transition = transition;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomTransform = transform$1;\n\texports.zoomIdentity = identity$8;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _filterData = __webpack_require__(11);\n\t\n\tvar _filterData2 = _interopRequireDefault(_filterData);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (container, scales, config) {\n\t    return function (data) {\n\t        var labels = container.selectAll('.label').data(data);\n\t\n\t        var text = function text(d) {\n\t            var count = (0, _filterData2.default)(d.data, scales.x, config.date).length;\n\t            return d.name + (count > 0 ? ' (' + count + ')' : '');\n\t        };\n\t\n\t        labels.text(text);\n\t\n\t        labels.enter().append('text').classed('label', true).attr('x', config.labelsWidth).attr('transform', function (d, idx) {\n\t            return 'translate(0, ' + (40 + scales.y(idx)) + ')';\n\t        }).attr('text-anchor', 'end').text(text);\n\t\n\t        labels.exit().remove();\n\t    };\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.boolOrReturnValue = exports.drawBottomAxis = exports.drawTopAxis = undefined;\n\t\n\tvar _xAxis = __webpack_require__(4);\n\t\n\tvar _xAxis2 = _interopRequireDefault(_xAxis);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar drawAxis = function drawAxis(container, xScale, configuration, orientation, y) {\n\t    return container.append('g').classed('x-axis', true).classed(orientation, true).attr('transform', 'translate(0, ' + y + ')').call((0, _xAxis2.default)(xScale, configuration, orientation));\n\t};\n\t\n\tvar drawTopAxis = exports.drawTopAxis = function drawTopAxis(container, xScale, configuration, dimensions) {\n\t    return drawAxis(container, xScale, configuration, 'top', 0);\n\t};\n\tvar drawBottomAxis = exports.drawBottomAxis = function drawBottomAxis(container, xScale, configuration, dimensions) {\n\t    return drawAxis(container, xScale, configuration, 'bottom', +dimensions.height - 21);\n\t};\n\tvar boolOrReturnValue = exports.boolOrReturnValue = function boolOrReturnValue(x, data) {\n\t    return typeof x === 'function' ? x(data) : x;\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (xScale, configuration, where) {\n\t\n\t    var tickFormat = configuration.locale ? configuration.locale.timeFormat : configuration.tickFormat;\n\t\n\t    //change where so the first letter will be uppercase \n\t    where = '' + where[0].toUpperCase() + where.slice(1);\n\t\n\t    var axis = d3['axis' + where]().scale(xScale).tickFormat(tickFormat);\n\t\n\t    if (typeof configuration.axisFormat === 'function') {\n\t        configuration.axisFormat(axis);\n\t    }\n\t\n\t    return axis;\n\t};\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar config = {\n\t    lineHeight: 40,\n\t    start: new Date(0),\n\t    end: new Date(),\n\t    minScale: 0,\n\t    maxScale: Infinity,\n\t    margin: {\n\t        top: 60,\n\t        left: 200,\n\t        bottom: 40,\n\t        right: 50\n\t    },\n\t    labelsWidth: 210,\n\t    labelsRightMargin: 10,\n\t    locale: null,\n\t    axisFormat: null,\n\t    tickFormat: function tickFormat(date) {\n\t        var formatMillisecond = d3.timeFormat(\".%L\"),\n\t            formatSecond = d3.timeFormat(\":%S\"),\n\t            formatMinute = d3.timeFormat(\"%I:%M\"),\n\t            formatHour = d3.timeFormat(\"%I %p\"),\n\t            formatDay = d3.timeFormat(\"%a %d\"),\n\t            formatWeek = d3.timeFormat(\"%b %d\"),\n\t            formatMonth = d3.timeFormat(\"%B\"),\n\t            formatYear = d3.timeFormat(\"%Y\");\n\t\n\t        //multiFormat(date) {\n\t        return (d3.timeSecond(date) < date ? formatMillisecond : d3.timeMinute(date) < date ? formatSecond : d3.timeHour(date) < date ? formatMinute : d3.timeDay(date) < date ? formatHour : d3.timeMonth(date) < date ? d3.timeWeek(date) < date ? formatDay : formatWeek : d3.timeYear(date) < date ? formatMonth : formatYear)(date);\n\t        //}\n\t    },\n\t    mouseout: function mouseout() {},\n\t    mouseover: function mouseover() {},\n\t    zoomend: function zoomend() {},\n\t    click: function click() {},\n\t    hasDelimiter: true,\n\t    date: function date(d) {\n\t        return d;\n\t    },\n\t    hasTopAxis: true,\n\t    hasBottomAxis: function hasBottomAxis(d) {\n\t        return d.length >= 10;\n\t    },\n\t    eventLineColor: 'black',\n\t    eventColor: null,\n\t    metaballs: true,\n\t    zoomable: true\n\t};\n\t\n\tconfig.dateFormat = config.locale ? config.locale.timeFormat('%d %B %Y') : d3.timeFormat('%d %B %Y');\n\t\n\texports.default = config;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar delimiters = exports.delimiters = function delimiters(svg, scales, x, dateFormat) {\n\t    var extremum = svg.select('.extremum');\n\t    var domain = scales.x.domain();\n\t\n\t    extremum.selectAll('.minimum').remove();\n\t    extremum.selectAll('.maximum').remove();\n\t\n\t    extremum.append('text').text(dateFormat(domain[0])).classed('minimum', true);\n\t\n\t    extremum.append('text').text(dateFormat(domain[1])).classed('maximum', true).attr('transform', 'translate(' + (scales.x.range()[1] - x) + ')').attr('text-anchor', 'end');\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = function (container, scales, configuration) {\n\t    return function dropsSelector(data) {\n\t        var dropLines = container.selectAll('.drop-line').data(data).enter().append('g').classed('drop-line', true).attr('transform', function (d, idx) {\n\t            return 'translate(10, ' + scales.y(idx) + ')';\n\t        }).attr('fill', configuration.eventLineColor);\n\t\n\t        var drops = dropLines.selectAll('.drop');\n\t\n\t        drops.data(function (d) {\n\t            return d.data;\n\t        }).enter().append('circle').classed('drop', true).attr('r', 5).attr('cx', function (d) {\n\t            return scales.x(configuration.date(d));\n\t        }).attr('cy', configuration.lineHeight / 2).attr('fill', configuration.eventColor).on('click', configuration.click).on('mouseover', configuration.mouseover).on('mouseout', configuration.mouseout);\n\t\n\t        // unregister previous event handlers to prevent from memory leaks\n\t        drops.exit().on('click', null).on('mouseout', null).on('mouseover', null).remove();\n\t\n\t        dropLines.exit().remove();\n\t    };\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _metaballs = __webpack_require__(12);\n\t\n\tvar _delimiters = __webpack_require__(6);\n\t\n\tvar _drops = __webpack_require__(7);\n\t\n\tvar _drops2 = _interopRequireDefault(_drops);\n\t\n\tvar _labels = __webpack_require__(2);\n\t\n\tvar _labels2 = _interopRequireDefault(_labels);\n\t\n\tvar _lineSeparator = __webpack_require__(9);\n\t\n\tvar _lineSeparator2 = _interopRequireDefault(_lineSeparator);\n\t\n\tvar _xAxis = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (svg, dimensions, scales, configuration) {\n\t    var defs = svg.append('defs');\n\t\n\t    defs.append('clipPath').attr('id', 'drops-container-clipper').append('rect').attr('id', 'drops-container-rect').attr('width', dimensions.width).attr('height', dimensions.height + configuration.margin.top + configuration.margin.bottom);\n\t\n\t    var labelsContainer = svg.append('g').classed('labels', true).attr('transform', 'translate(0, ' + configuration.lineHeight + ')');\n\t\n\t    var chartContainer = svg.append('g').attr('class', 'chart-wrapper').attr('transform', 'translate(' + (configuration.labelsWidth + configuration.labelsRightMargin) + ', 55)');\n\t\n\t    var dropsContainer = chartContainer.append('g').classed('drops-container', true).attr('clip-path', 'url(#drops-container-clipper)').style('filter', 'url(#metaballs)');\n\t\n\t    chartContainer.append('g').classed('extremum', true).attr('width', dimensions.width).attr('height', 30).attr('transform', 'translate(0, -35)');\n\t\n\t    if (configuration.metaballs) {\n\t        (0, _metaballs.metaballs)(defs);\n\t    }\n\t\n\t    var axesContainer = chartContainer.append('g').classed('axes', true);\n\t    var lineSeparator = (0, _lineSeparator2.default)(scales, configuration, dimensions);\n\t    var labels = (0, _labels2.default)(labelsContainer, scales, configuration);\n\t    var drops = (0, _drops2.default)(dropsContainer, scales, configuration);\n\t\n\t    return function (data) {\n\t        lineSeparator(axesContainer, data);\n\t        (0, _delimiters.delimiters)(svg, scales, configuration.labelsWidth + configuration.labelsRightMargin, configuration.dateFormat);\n\t        drops(data);\n\t        labels(data);\n\t        if ((0, _xAxis.boolOrReturnValue)(configuration.hasTopAxis, data)) {\n\t            (0, _xAxis.drawTopAxis)(axesContainer, scales.x, configuration, dimensions);\n\t        }\n\t        if ((0, _xAxis.boolOrReturnValue)(configuration.hasBottomAxis, data)) {\n\t            (0, _xAxis.drawBottomAxis)(axesContainer, scales.x, configuration, dimensions);\n\t        }\n\t    };\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (scales, configuration, dimensions) {\n\t    return function (container, data) {\n\t        var separators = container.selectAll('.line-separator').data(data);\n\t\n\t        separators.enter().append('g').classed('line-separator', true).attr('transform', function (d, i) {\n\t            return 'translate(0, ' + (scales.y(i) + configuration.lineHeight) + ')';\n\t        }).append('line').attr('x1', 0).attr('x2', dimensions.width);\n\t\n\t        separators.exit().remove();\n\t    };\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _configurable = __webpack_require__(14);\n\t\n\tvar _configurable2 = _interopRequireDefault(_configurable);\n\t\n\tvar _config = __webpack_require__(5);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _drawer = __webpack_require__(8);\n\t\n\tvar _drawer2 = _interopRequireDefault(_drawer);\n\t\n\tvar _zoom = __webpack_require__(13);\n\t\n\tvar _zoom2 = _interopRequireDefault(_zoom);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction eventDrops() {\n\t    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t    var finalConfiguration = _extends({}, _config2.default, config);\n\t\n\t    var yScale = function yScale(data) {\n\t        return d3.scaleOrdinal().domain(data.map(function (d) {\n\t            return d.name;\n\t        })).range(data.map(function (d, i) {\n\t            return i * finalConfiguration.lineHeight;\n\t        }));\n\t    };\n\t\n\t    var xScale = function xScale(width, timeBounds) {\n\t        return d3.scaleTime().domain(timeBounds).range([0, width]);\n\t    };\n\t\n\t    function eventDropGraph(selection) {\n\t        return selection.each(function selector(data) {\n\t            d3.select(this).select('.event-drops-chart').remove();\n\t\n\t            var dimensions = {\n\t                width: this.clientWidth,\n\t                height: data.length * finalConfiguration.lineHeight\n\t            };\n\t\n\t            var svg = d3.select(this).append('svg').classed('event-drops-chart', true).attr('width', dimensions.width).attr('height', dimensions.height + finalConfiguration.margin.top + finalConfiguration.margin.bottom);\n\t\n\t            var scales = getScales(dimensions, finalConfiguration, data);\n\t\n\t            var draw = (0, _drawer2.default)(svg, dimensions, scales, finalConfiguration);\n\t            draw(data);\n\t\n\t            if (finalConfiguration.zoomable) {\n\t                (0, _zoom2.default)(svg, dimensions, scales, finalConfiguration, data);\n\t            }\n\t        });\n\t    }\n\t\n\t    function getScales(dimensions, configuration, data) {\n\t        return {\n\t            x: xScale(dimensions.width, [configuration.start, configuration.end]),\n\t            y: yScale(data)\n\t        };\n\t    }\n\t\n\t    (0, _configurable2.default)(eventDropGraph, finalConfiguration);\n\t\n\t    return eventDropGraph;\n\t}\n\t\n\td3.chart = d3.chart || {};\n\td3.chart.eventDrops = eventDrops;\n\t\n\texports.default = eventDrops;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\texports.default = filterData;\n\tfunction filterData() {\n\t    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    var scale = arguments[1];\n\t    var date = arguments[2];\n\t\n\t    var _scale$domain = scale.domain(),\n\t        _scale$domain2 = _slicedToArray(_scale$domain, 2),\n\t        min = _scale$domain2[0],\n\t        max = _scale$domain2[1];\n\t\n\t    return data.filter(function (d) {\n\t        return date(d) >= min && date(d) <= max;\n\t    });\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar metaballs = exports.metaballs = function metaballs(defs) {\n\t    var filters = defs.append('filter');\n\t\n\t    filters.attr('id', 'metaballs');\n\t\n\t    filters.append('feGaussianBlur').attr('in', 'SourceGraphic').attr('stdDeviation', 10).attr('result', 'blur');\n\t\n\t    filters.append('feColorMatrix').attr('in', 'blur').attr('mode', 'matrix').attr('values', '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10').attr('result', 'contrast');\n\t\n\t    filters.append('feBlend').attr('in', 'SourceGraphic').attr('in2', 'contrast');\n\t\n\t    return filters;\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _d = __webpack_require__(1);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tvar _xAxis = __webpack_require__(4);\n\t\n\tvar _xAxis2 = _interopRequireDefault(_xAxis);\n\t\n\tvar _labels = __webpack_require__(2);\n\t\n\tvar _labels2 = _interopRequireDefault(_labels);\n\t\n\tvar _xAxis3 = __webpack_require__(3);\n\t\n\tvar _debounce = __webpack_require__(15);\n\t\n\tvar _debounce2 = _interopRequireDefault(_debounce);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\texports.default = function (container, dimensions, scales, configuration, data, callback) {\n\t    var onZoom = function onZoom(data, index, element) {\n\t        var scalingFunction = d3.event.transform.rescaleX(scales.x);\n\t\n\t        if ((0, _xAxis3.boolOrReturnValue)(configuration.hasTopAxis, data)) {\n\t            container.selectAll('.x-axis.top').call(d3.axisTop().scale(scalingFunction));\n\t        }\n\t\n\t        if ((0, _xAxis3.boolOrReturnValue)(configuration.hasBottomAxis, data)) {\n\t            container.selectAll('.x-axis.bottom').call(d3.axisBottom().scale(scalingFunction));\n\t        }\n\t\n\t        var sumDataCount = (0, _debounce2.default)((0, _labels2.default)(container.select('.labels'), { x: scalingFunction }, configuration), 100);\n\t\n\t        requestAnimationFrame(function () {\n\t\n\t            var drops = container.selectAll('.drop-line').selectAll('.drop').attr('cx', function (d, i) {\n\t                return scalingFunction(new Date(d.date));\n\t            });\n\t\n\t            sumDataCount(data);\n\t\n\t            if (callback) {\n\t                callback(data);\n\t            }\n\t        });\n\t    };\n\t\n\t    var zoom = d3.zoom().scaleExtent([configuration.minScale, configuration.maxScale]).on('zoom', onZoom).on('end', configuration.zoomend);\n\t\n\t    container.call(zoom);\n\t    return zoom;\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction configurable(targetFunction, config) {\n\t\n\t    function configure(item) {\n\t        return function(value) {\n\t            if (!arguments.length) return config[item];\n\t            config[item] = value;\n\t\n\t            return targetFunction;\n\t        };\n\t    }\n\t\n\t    for (var item in config) {\n\t        targetFunction[item] = configure(item);\n\t    }\n\t}\n\t\n\tif(true) {\n\t    module.exports = configurable;\n\t} else if ('function' == typeof define && define.amd) {\n\t    define([], configurable);\n\t} else {\n\t    window.configurable = configurable;\n\t}\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Returns a function, that, as long as it continues to be invoked, will not\n\t * be triggered. The function will be called after it stops being called for\n\t * N milliseconds. If `immediate` is passed, trigger the function on the\n\t * leading edge, instead of the trailing. The function also has a property 'clear' \n\t * that is a function which will clear the timer to prevent previously scheduled executions. \n\t *\n\t * @source underscore.js\n\t * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n\t * @param {Function} function to wrap\n\t * @param {Number} timeout in ms (`100`)\n\t * @param {Boolean} whether to execute at the beginning (`false`)\n\t * @api public\n\t */\n\t\n\tmodule.exports = function debounce(func, wait, immediate){\n\t  var timeout, args, context, timestamp, result;\n\t  if (null == wait) wait = 100;\n\t\n\t  function later() {\n\t    var last = Date.now() - timestamp;\n\t\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      if (!immediate) {\n\t        result = func.apply(context, args);\n\t        context = args = null;\n\t      }\n\t    }\n\t  };\n\t\n\t  var debounced = function(){\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    var callNow = immediate && !timeout;\n\t    if (!timeout) timeout = setTimeout(later, wait);\n\t    if (callNow) {\n\t      result = func.apply(context, args);\n\t      context = args = null;\n\t    }\n\t\n\t    return result;\n\t  };\n\t\n\t  debounced.clear = function() {\n\t    if (timeout) {\n\t      clearTimeout(timeout);\n\t      timeout = null;\n\t    }\n\t  };\n\t\n\t  return debounced;\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// eventDrops.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e85e96623f04e512c8d8","// https://d3js.org Version 4.8.0. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.8.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 1\n// module chunks = 0","import filterData from '../filterData';\n\nexport default (container, scales, config) =>\n    data => {\n        const labels = container.selectAll('.label').data(data);\n\n        const text = d => {\n            const count = filterData(d.data, scales.x, config.date).length;\n            return d.name + (count > 0 ? ` (${count})` : '');\n        };\n\n        labels.text(text);\n\n        labels\n            .enter()\n            .append('text')\n            .classed('label', true)\n            .attr('x', config.labelsWidth)\n            .attr(\n                'transform',\n                (d, idx) => `translate(0, ${40 + scales.y(idx)})`\n            )\n            .attr('text-anchor', 'end')\n            .text(text);\n\n        labels.exit().remove();\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./lib/drawer/labels.js","import xAxis from '../xAxis';\n\nconst drawAxis = (container, xScale, configuration, orientation, y) => {\n    return container\n        .append('g')\n        .classed('x-axis', true)\n        .classed(orientation, true)\n        .attr('transform', `translate(0, ${y})`)\n        .call(xAxis(xScale, configuration, orientation));\n};\n\nexport const drawTopAxis = (container, xScale, configuration, dimensions) =>\n    drawAxis(container, xScale, configuration, 'top', 0);\nexport const drawBottomAxis = (container, xScale, configuration, dimensions) =>\n    drawAxis(\n        container,\n        xScale,\n        configuration,\n        'bottom',\n        +dimensions.height - 21\n    );\nexport const boolOrReturnValue = (x, data) =>\n    typeof x === 'function' ? x(data) : x;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/drawer/xAxis.js","import * as d3 from 'd3/build/d3'\n\nexport default function(xScale, configuration, where) {\n    \n    const tickFormat = configuration.locale ? configuration.locale.timeFormat : configuration.tickFormat;\n\n    //change where so the first letter will be uppercase \n    where = `${where[0].toUpperCase()}${where.slice(1)}`;\n\n    const axis = d3[`axis${where}`]()\n        .scale(xScale)\n        .tickFormat(tickFormat);\n\n    if (typeof configuration.axisFormat === 'function') {\n        configuration.axisFormat(axis);\n    }\n\n    return axis;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/xAxis.js","import * as d3 from  'd3/build/d3';\n\nconst config = {\n    lineHeight: 40,\n    start: new Date(0),\n    end: new Date(),\n    minScale: 0,\n    maxScale: Infinity,\n    margin: {\n        top: 60,\n        left: 200,\n        bottom: 40,\n        right: 50,\n    },\n    labelsWidth: 210,\n    labelsRightMargin: 10,\n    locale: null,\n    axisFormat: null,\n    tickFormat: (date) => {\n        const formatMillisecond = d3.timeFormat(\".%L\"),\n            formatSecond = d3.timeFormat(\":%S\"),\n            formatMinute = d3.timeFormat(\"%I:%M\"),\n            formatHour = d3.timeFormat(\"%I %p\"),\n            formatDay = d3.timeFormat(\"%a %d\"),\n            formatWeek = d3.timeFormat(\"%b %d\"),\n            formatMonth = d3.timeFormat(\"%B\"),\n            formatYear = d3.timeFormat(\"%Y\");\n\n        //multiFormat(date) {\n            return (d3.timeSecond(date) < date ? formatMillisecond\n                : d3.timeMinute(date) < date ? formatSecond\n                    : d3.timeHour(date) < date ? formatMinute\n                        : d3.timeDay(date) < date ? formatHour\n                            : d3.timeMonth(date) < date ? (d3.timeWeek(date) < date ? formatDay : formatWeek)\n                                : d3.timeYear(date) < date ? formatMonth\n                                    : formatYear)(date);\n        //}\n    },\n    mouseout: () => {},\n    mouseover: () => {},\n    zoomend: () => {},\n    click: () => {},\n    hasDelimiter: true,\n    date: d => d,\n    hasTopAxis: true,\n    hasBottomAxis: (d) => d.length >= 10,\n    eventLineColor: 'black',\n    eventColor: null,\n    metaballs: true,\n    zoomable: true,\n};\n\nconfig.dateFormat = config.locale ? config.locale.timeFormat('%d %B %Y') : d3.timeFormat('%d %B %Y');\n\nexport default config;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/config.js","export const delimiters = (svg, scales, x, dateFormat) => {\n    const extremum = svg.select('.extremum');\n    const domain = scales.x.domain();\n\n    extremum.selectAll('.minimum').remove();\n    extremum.selectAll('.maximum').remove();\n\n    extremum\n        .append('text')\n        .text(dateFormat(domain[0]))\n        .classed('minimum', true);\n\n    extremum\n        .append('text')\n        .text(dateFormat(domain[1]))\n        .classed('maximum', true)\n        .attr('transform', `translate(${scales.x.range()[1] - x})`)\n        .attr('text-anchor', 'end');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/drawer/delimiters.js","import * as d3 from 'd3/build/d3';\n\nexport default (container, scales, configuration) =>\n    function dropsSelector(data) {\n        const dropLines = container\n            .selectAll('.drop-line')\n            .data(data)\n            .enter()\n            .append('g')\n            .classed('drop-line', true)\n            .attr('transform', (d, idx) => `translate(10, ${scales.y(idx)})`)\n            .attr('fill', configuration.eventLineColor);\n\n        const drops = dropLines.selectAll('.drop');\n\n        drops\n            .data(d => d.data)\n            .enter()\n            .append('circle')\n            .classed('drop', true)\n            .attr('r', 5)\n            .attr('cx', d => scales.x(configuration.date(d)))\n            .attr('cy', configuration.lineHeight / 2)\n            .attr('fill', configuration.eventColor)\n            .on('click', configuration.click)\n            .on('mouseover', configuration.mouseover)\n            .on('mouseout', configuration.mouseout);\n\n        // unregister previous event handlers to prevent from memory leaks\n        drops\n            .exit()\n            .on('click', null)\n            .on('mouseout', null)\n            .on('mouseover', null)\n            .remove();\n\n        dropLines.exit().remove();\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./lib/drawer/drops.js","import { metaballs } from '../metaballs';\nimport { delimiters } from './delimiters';\nimport dropsFactory from './drops';\nimport labelsFactory from './labels';\nimport lineSeparatorFactory from './lineSeparator';\nimport { drawTopAxis, drawBottomAxis, boolOrReturnValue } from './xAxis';\n\nexport default (svg, dimensions, scales, configuration) => {\n    const defs = svg.append('defs');\n\n    defs\n        .append('clipPath')\n        .attr('id', 'drops-container-clipper')\n        .append('rect')\n        .attr('id', 'drops-container-rect')\n        .attr('width', dimensions.width)\n        .attr(\n            'height',\n            dimensions.height +\n                configuration.margin.top +\n                configuration.margin.bottom\n        );\n\n    const labelsContainer = svg\n        .append('g')\n        .classed('labels', true)\n        .attr('transform', `translate(0, ${configuration.lineHeight})`);\n\n    const chartContainer = svg\n        .append('g')\n        .attr('class', 'chart-wrapper')\n        .attr(\n            'transform',\n            `translate(${configuration.labelsWidth + configuration.labelsRightMargin}, 55)`\n        );\n\n    const dropsContainer = chartContainer\n        .append('g')\n        .classed('drops-container', true)\n        .attr('clip-path', 'url(#drops-container-clipper)')\n        .style('filter', 'url(#metaballs)');\n\n    chartContainer\n        .append('g')\n        .classed('extremum', true)\n        .attr('width', dimensions.width)\n        .attr('height', 30)\n        .attr('transform', `translate(0, -35)`);\n\n    if (configuration.metaballs) {\n        metaballs(defs);\n    }\n\n    const axesContainer = chartContainer.append('g').classed('axes', true);\n    const lineSeparator = lineSeparatorFactory(\n        scales,\n        configuration,\n        dimensions\n    );\n    const labels = labelsFactory(labelsContainer, scales, configuration);\n    const drops = dropsFactory(dropsContainer, scales, configuration);\n\n    return data => {\n        lineSeparator(axesContainer, data);\n        delimiters(\n            svg,\n            scales,\n            configuration.labelsWidth + configuration.labelsRightMargin,\n            configuration.dateFormat\n        );\n        drops(data);\n        labels(data);\n        if (boolOrReturnValue(configuration.hasTopAxis, data)) {\n            drawTopAxis(axesContainer, scales.x, configuration, dimensions);\n        }\n        if (boolOrReturnValue(configuration.hasBottomAxis, data)) {\n            drawBottomAxis(axesContainer, scales.x, configuration, dimensions);\n        }\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/drawer/index.js","export default (scales, configuration, dimensions) =>\n    (container, data) => {\n        const separators = container.selectAll('.line-separator').data(data);\n\n        separators\n            .enter()\n            .append('g')\n            .classed('line-separator', true)\n            .attr(\n                'transform',\n                (d, i) =>\n                    `translate(0, ${scales.y(i) + configuration.lineHeight})`\n            )\n            .append('line')\n            .attr('x1', 0)\n            .attr('x2', dimensions.width);\n\n        separators.exit().remove();\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./lib/drawer/lineSeparator.js","import * as d3 from 'd3/build/d3';\n\nimport configurable from 'configurable.js';\nimport defaultConfig from './config';\nimport drawer from './drawer';\nimport zoom from './zoom';\n\nfunction eventDrops(config = {}) {\n    const finalConfiguration = { ...defaultConfig, ...config };\n\n    const yScale = data => {\n        return d3\n            .scaleOrdinal()\n            .domain(data.map(d => d.name))\n            .range(data.map((d, i) => i * finalConfiguration.lineHeight));\n    };\n\n    const xScale = (width, timeBounds) => {\n        return d3.scaleTime().domain(timeBounds).range([0, width]);\n    };\n\n    function eventDropGraph(selection) {\n        return selection.each(function selector(data) {\n            d3.select(this).select('.event-drops-chart').remove();\n\n            const dimensions = {\n                width: this.clientWidth,\n                height: data.length * finalConfiguration.lineHeight,\n            };\n\n            const svg = d3\n                .select(this)\n                .append('svg')\n                .classed('event-drops-chart', true)\n                .attr('width', dimensions.width)\n                .attr(\n                    'height',\n                    dimensions.height +\n                        finalConfiguration.margin.top +\n                        finalConfiguration.margin.bottom\n                );\n\n            const scales = getScales(dimensions, finalConfiguration, data);\n\n            const draw = drawer(svg, dimensions, scales, finalConfiguration);\n            draw(data);\n\n            if (finalConfiguration.zoomable) {\n                zoom(svg, dimensions, scales, finalConfiguration, data);\n            }\n        });\n    }\n\n    function getScales(dimensions, configuration, data) {\n        return {\n            x: xScale(dimensions.width, [\n                configuration.start,\n                configuration.end,\n            ]),\n            y: yScale(data),\n        };\n    }\n\n    configurable(eventDropGraph, finalConfiguration);\n\n    return eventDropGraph;\n}\n\nd3.chart = d3.chart || {};\nd3.chart.eventDrops = eventDrops;\n\nexport default eventDrops;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/eventDrops.js","export default function filterData(data = [], scale, date) {\n    const [min, max] = scale.domain();\n    return data.filter(d => date(d) >= min && date(d) <= max);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/filterData.js","export const metaballs = defs => {\n    const filters = defs.append('filter');\n\n    filters.attr('id', 'metaballs');\n\n    filters.append('feGaussianBlur')\n        .attr('in', 'SourceGraphic')\n        .attr('stdDeviation', 10)\n        .attr('result', 'blur');\n\n    filters.append('feColorMatrix')\n        .attr('in', 'blur')\n        .attr('mode', 'matrix')\n        .attr('values', '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10')\n        .attr('result', 'contrast');\n\n    filters.append('feBlend')\n        .attr('in', 'SourceGraphic')\n        .attr('in2', 'contrast');\n\n    return filters;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/metaballs.js","import * as d3 from 'd3/build/d3';\nimport xAxis from './xAxis';\nimport labels from './drawer/labels';\nimport { boolOrReturnValue } from  './drawer/xAxis'\nimport debounce from 'debounce'\n\nexport default (container, dimensions, scales, configuration, data, callback) => {\n    const onZoom = (data,index,element) => {\n            const scalingFunction = d3.event.transform.rescaleX(scales.x);\n            \n            if(boolOrReturnValue(configuration.hasTopAxis, data)){\n                container.selectAll('.x-axis.top')\n                         .call(d3.axisTop().scale(scalingFunction));\n            }  \n            \n            if(boolOrReturnValue(configuration.hasBottomAxis, data)){\n                container.selectAll('.x-axis.bottom')\n                         .call(d3.axisBottom().scale(scalingFunction));    \n            }\n\n            const sumDataCount = debounce(labels(container.select('.labels'),{ x : scalingFunction},configuration),100);\n            \n            requestAnimationFrame(() =>{\n                \n                const drops = container.selectAll('.drop-line')\n                    .selectAll('.drop')\n                    .attr('cx',(d,i) => {\n                        return scalingFunction(new Date(d.date))\n                })\n\n                sumDataCount(data);    \n\n                if(callback){\n                    callback(data);\n                }\n            });\n\n            \n    };\n\n    const zoom = d3.zoom()\n        .scaleExtent([configuration.minScale, configuration.maxScale])\n        .on('zoom', onZoom)\n        .on('end', configuration.zoomend);\n    \n    container.call(zoom);\n    return zoom;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/zoom.js","'use strict';\n\nfunction configurable(targetFunction, config) {\n\n    function configure(item) {\n        return function(value) {\n            if (!arguments.length) return config[item];\n            config[item] = value;\n\n            return targetFunction;\n        };\n    }\n\n    for (var item in config) {\n        targetFunction[item] = configure(item);\n    }\n}\n\nif('object' == typeof exports && 'undefined' != typeof module) {\n    module.exports = configurable;\n} else if ('function' == typeof define && define.amd) {\n    define([], configurable);\n} else {\n    window.configurable = configurable;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/configurable.js/configurable.js\n// module id = 14\n// module chunks = 0","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debounce/index.js\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}